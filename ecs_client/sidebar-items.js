initSidebarItems({"mod":[["action","This module defines request and response types for the various actions supported by ECS."],["custom_headers","Defines the X-Amz-Target and X-Amz-Date custom HTTP headers using hyper macros"],["custom_ser","This module contains functions called by serde to customize serialization of ECSRequest types."],["ecs_client","This module contains the ECSClient which can be used to interact with Amazon ECS's API. The client sources your AWS credentials from the environment in which it is running.  You'll need to create an AWS IAM user and add them to a security group with proper permissions, as outlined here: http://docs.aws.amazon.com/AmazonECS/latest/developerguide/get-set-up-for-amazon-ecs.html . Once you've created an IAM user, you can generate security credentials by going to the IAM console, clicking on Users in the navigation pane, selecting your user from the list, choosing the Security Credentials tab, and clicking Create Access Key.  This will generate an AWS access key ID and an AWS secret access key.  Store these in the environment in which your client will be running by setting the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY, respectively, as such:"],["error","This module defines Error types that may be returned when sending a request to Amazon ECS. Note that the ECS API reference defines 'Exception' types, but we map each Amazon ECS  Exception to a Rust Error."],["region","An enum defining the regions in which Amazon ECS is supported."],["signature","This module implements Amazon's Signature Version 4 Signing Algorithm which is required in order to make authenticated requests to any Amazon Web Service."]]});