var searchIndex = {};
searchIndex["ecs_client"] = {"doc":"","items":[[0,"ecs_client","ecs_client","This module contains the ECSClient which can be used to interact with Amazon ECS&#39;s API.",null,null],[3,"ECSClient","ecs_client::ecs_client","",null,null],[12,"region","","",0,null],[12,"client","","",0,null],[17,"SERVICE_ABBREVIATION","","The service abbreviation string for Amazon ECS.",null,null],[17,"AMZ_SUBLEVEL_CONTENT_TYPE","","The MIME sublevel content type of an ECS HTTP request body.",null,null],[17,"ECS_API_VERSION","","The ECS API version this request is meant for.",null,null],[11,"new","","Creates a new ECSClient for the specified Region.",0,{"inputs":[{"name":"region"}],"output":{"name":"ecsclient"}}],[11,"set_region","","Sets the Region to which the client sends requests.",0,{"inputs":[{"name":"ecsclient"},{"name":"region"}],"output":null}],[11,"list_clusters","","Lists all of your compute clusters on ECS.",0,{"inputs":[{"name":"ecsclient"},{"name":"listclustersrequest"}],"output":null}],[11,"sign_and_send","","Creates an HTTP request to be sent to Amazon ECS.\nSigns the request using Amazon&#39;s Signature Version 4 Signing Algorithm.\nSerializes the service request to json format and sets it as the payload in the HTTP body.\nSends the request to ECS and returns the response.",0,{"inputs":[{"name":"ecsclient"},{"name":"ecsaction"},{"name":"t"}],"output":{"name":"i32"}}],[11,"build_headers","","Builds a hyper::header::Headers with the Host, Accept-Encoding, X-Amz-Target, X-Amz-Date,\nContent-Type, and Content-Length HTTP headers set.",0,{"inputs":[{"name":"ecsclient"},{"name":"ecsaction"},{"name":"u64"}],"output":{"name":"headers"}}],[11,"build_hostname","","Builds and returns the hostname String used in the Host header.",0,{"inputs":[{"name":"ecsclient"}],"output":{"name":"string"}}],[11,"build_x_amz_target","","Builds and returns the target String used in the X-Amz-Target header.",0,{"inputs":[{"name":"ecsclient"},{"name":"ecsaction"}],"output":{"name":"string"}}],[0,"request","ecs_client","",null,null],[0,"ecs_request","ecs_client::request","A marker trait to &quot;supertype&quot; each particular kind of ECS request.  Each ECSRequest must be\nserde::ser::Serialize so that it can be serialized to json and set as the payload of the\nrequest in the HTTP body.",null,null],[8,"ECSRequest","ecs_client::request::ecs_request","",null,null],[0,"list_clusters","ecs_client::request","A struct for a ListClusters request which can be serialized to json and set as the body of an\nHTTP request.",null,null],[3,"ListClustersRequest","ecs_client::request::list_clusters","",null,null],[12,"maxResults","","The max number of cluster results returned in paginated output.\nMust be between 1 and 100, inclusive.\nIf omitted, defaults to 100.",1,null],[12,"nextToken","","The value returned from a previous paginated request.\nPagination continues from the end of the previous results that returned the value.\nThe value returned is null if there are no more results to return.",1,null],[11,"fmt","","",1,{"inputs":[{"name":"listclustersrequest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",1,{"inputs":[{"name":"listclustersrequest"},{"name":"__s"}],"output":{"name":"result"}}],[0,"region","ecs_client","An enum defining the regions in which Amazon ECS is supported.",null,null],[4,"Region","ecs_client::region","",null,null],[13,"USEast1","","",2,null],[13,"USWest1","","",2,null],[13,"USWest2","","",2,null],[13,"EUWest1","","",2,null],[13,"EUCentral1","","",2,null],[13,"APNortheast1","","",2,null],[13,"APSoutheast1","","",2,null],[13,"APSoutheast2","","",2,null],[11,"clone","","",2,{"inputs":[{"name":"region"}],"output":{"name":"region"}}],[11,"fmt","","",2,{"inputs":[{"name":"region"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"action","ecs_client","An enum defining the possible actions which can be sent to Amazon ECS.",null,null],[4,"ECSAction","ecs_client::action","",null,null],[13,"ListClusters","","",3,null],[11,"clone","","",3,{"inputs":[{"name":"ecsaction"}],"output":{"name":"ecsaction"}}],[11,"fmt","","",3,{"inputs":[{"name":"ecsaction"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"custom_headers","ecs_client","Defines the X-Amz-Target and X-Amz-Date custom HTTP headers using hyper macros",null,null],[3,"XAmzTarget","ecs_client::custom_headers","",null,null],[12,"0","","",4,null],[3,"XAmzDate","","",null,null],[12,"0","","",5,null],[11,"eq","","",4,{"inputs":[{"name":"xamztarget"},{"name":"xamztarget"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"xamztarget"},{"name":"xamztarget"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"xamztarget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"xamztarget"}],"output":{"name":"xamztarget"}}],[11,"new","collections::string","Creates a new empty `String`.",6,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",6,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",6,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",6,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",6,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",6,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",6,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",6,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",6,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",6,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_mut_str","","Extracts a string slice containing the entire string.",6,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Appends a given string slice onto the end of this `String`.",6,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",6,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",6,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",6,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",6,null],[11,"push","","Appends the given `char` to the end of this `String`.",6,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",6,null],[11,"truncate","","Shortens this `String` to the specified length.",6,null],[11,"pop","","Removes the last character from the string buffer and returns it.",6,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",6,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into this `String` at a byte position.",6,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",6,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of this `String`, in bytes.",6,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",6,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates this `String`, removing all contents.",6,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",6,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",6,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"write_str","","",6,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",6,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"into","","",6,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"from","","",6,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"as_ref","","",6,null],[11,"as_ref","","",6,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref_mut","","",6,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref","","",6,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"index_mut","","",6,{"inputs":[{"name":"string"},{"name":"rangetoinclusive"}],"output":{"name":"str"}}],[11,"index_mut","","",6,{"inputs":[{"name":"string"},{"name":"rangeinclusive"}],"output":{"name":"str"}}],[11,"index_mut","","",6,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",6,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",6,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",6,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",6,{"inputs":[{"name":"string"},{"name":"rangetoinclusive"}],"output":{"name":"str"}}],[11,"index","","",6,{"inputs":[{"name":"string"},{"name":"rangeinclusive"}],"output":{"name":"str"}}],[11,"index","","",6,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index","","",6,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",6,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",6,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"add","","",6,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"string"}}],[11,"eq","","",6,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"extend","","",6,null],[11,"extend","","",6,null],[11,"extend","","",6,null],[11,"extend","","",6,null],[11,"from_iter","","",6,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",6,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",6,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"clone","","",6,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",6,null],[11,"partial_cmp","","",6,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"assert_receiver_is_total_eq","","",6,null],[11,"cmp","","",6,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"borrow","","",6,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref","ecs_client::custom_headers","",4,{"inputs":[{"name":"xamztarget"}],"output":{"name":"string"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"xamztarget"}],"output":{"name":"string"}}],[11,"header_name","","",4,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",4,null],[11,"fmt_header","","",4,{"inputs":[{"name":"xamztarget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"xamztarget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"xamzdate"},{"name":"xamzdate"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"xamzdate"},{"name":"xamzdate"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"xamzdate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"xamzdate"}],"output":{"name":"xamzdate"}}],[11,"deref","","",5,{"inputs":[{"name":"xamzdate"}],"output":{"name":"string"}}],[11,"deref_mut","","",5,{"inputs":[{"name":"xamzdate"}],"output":{"name":"string"}}],[11,"header_name","","",5,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",5,null],[11,"fmt_header","","",5,{"inputs":[{"name":"xamzdate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"xamzdate"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"signature","ecs_client","This module implements Amazon&#39;s Signature Version 4 Signing Algorithm which is required in\norder to make authenticated requests to any Amazon Web Service.",null,null],[5,"calculate_signature","ecs_client::signature","Calculates the Version 4 Signature according to the guidelines listed at\nhttp://docs.aws.amazon.com/general/latest/gr/signature-version-4.html .",null,{"inputs":[{"name":"headers"},{"name":"str"}],"output":{"name":"string"}}],[5,"build_canonical_request","","Builds and returns the canonical request String according to the guidelines at\nhttp://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html .\nThe canonical request contains the HTTP headers with lowercase names followed by their\nvalue, with consecutive spaces converted to single spaces.  The headers must appear in\norder sorted by character code in lowercase, followed by a list of headers included in the\nsigned request, followed by SHA256-hashed body.  The entire request is then hashed again\nand returned as a String.",null,{"inputs":[{"name":"headers"},{"name":"str"}],"output":{"name":"string"}}],[5,"fmt_canonical_header","","Formats a single header according to the canonical format.  Header names must appear in\nlowercase, followed by a &#39;:&#39;, followed by the header value, with consecutive spaces\nconverted to single spaces.  A newline character terminates the String.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"string"}}],[5,"hash_to_hex","","Hashes the input &amp;str using SHA256, and converts the resulting digest to a lowercase\nhexadecimal String.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[17,"SIGNING_ALGORITHM","","The default algorithm used for calculating the authentication signature.",null,null]],"paths":[[3,"ECSClient"],[3,"ListClustersRequest"],[4,"Region"],[4,"ECSAction"],[3,"XAmzTarget"],[3,"XAmzDate"],[3,"String"]]};
initSearch(searchIndex);
